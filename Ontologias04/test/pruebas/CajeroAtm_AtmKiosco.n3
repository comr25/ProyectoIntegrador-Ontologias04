@prefix       : <http://www.ejemplo.org/#> .
@prefix  owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix  xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix  rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

: a owl:Ontology ;
   rdfs:comment "A ATM Ontology for matching among components in ATM model" .

#-----------------------------------------------------------------------------------------------
#-- Declaration of Classes ---------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------

:Context       a owl:Class .

:Condition     a owl:Class ;
                rdfs:label   "Class: Condition used by Pre, Post and Invariant" ;
                rdfs:comment "Condition".                 

:ComponentType a owl:Class ;
                rdfs:label   "Class: Instances of Component Type" ;
                rdfs:comment "Instances of Components";
                rdfs:subClassOf   
                     [ a owl:Restriction ;
                         owl:onProperty :hasInterface ;  # Restriccion sobre el numero de interfases
                         owl:minCardinality 1 ] .             # Un componente tiene minimo 1 interfaz


# Modificar los tipos de la ontologia a los Tipos de CORBA-IDL+
:DataType        a owl:Class .
   :BasicType rdfs:subClassOf :DataType .         
       :Null        rdfs:subClassOf :BasicType .
       :Void        rdfs:subClassOf :BasicType .
       :Boolean     rdfs:subClassOf :BasicType .
            :False     rdfs:subClassOf :Boolean .
            :True     rdfs:subClassOf :Boolean .
       :Char          rdfs:subClassOf :BasicType .
       :Double      rdfs:subClassOf :BasicType .       
          :Float       rdfs:subClassOf :Double .
       :Long        rdfs:subClassOf :BasicType .
          :Integer     rdfs:subClassOf :Long .
          :Short       rdfs:subClassOf :Integer .
          :Byte        rdfs:subClassOf :Short .
   :StructuredType rdfs:subClassOf :DataType .
       :List        rdfs:subClassOf :StructuredType .
       :Array       rdfs:subClassOf :StructuredType .
   :AnotherType rdfs:subClassOf :DataType .

:Domain    a owl:Class .
     :Multimedia    rdfs:subClassOf :Domain .

:Instance  a owl:Class .

:Interface a owl:Class .

:Interface rdfs:subClassOf 
       [ a owl:Restriction ;
           owl:onProperty :hasNumMethods ;
           owl:minCardinality 1 ] .             # Restriccion sobre el numero de interfases   
     :Provided    rdfs:subClassOf :Interface .
     :Required    rdfs:subClassOf :Interface .
     :Provided    owl:disjointWith :Required .
     :Required    owl:disjointWith :Provided .

:Method          a owl:Class .

:Operator        a owl:Class .

:OperatorLogic   a owl:Class .

:Parameter       a owl:Class .

:ParameterDirection    a owl:Class .
     :Input       rdfs:subClassOf :ParameterDirection .
     :OutPut      rdfs:subClassOf :ParameterDirection .
     :InputOutput rdfs:subClassOf :ParameterDirection .      
     
:Pattern         a owl:Class .
     :ArchitecturalPattern  rdfs:subClassOf :Pattern .
     :DesignPattern         rdfs:subClassOf :Pattern .

:Return          a owl:Class .

:Requirements    a owl:Class .
     :FunctionalRequirements        rdfs:subClassOf :Requirements .
     :NonFunctionalRequirements_QoS rdfs:subClassOf :Requirements .
     :AnswerTime        rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :ExecutionTime    rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :MemoryResource rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :Performance        rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :QoSAttribute       rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :QoSMetric           rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :Security              rdfs:subClassOf :NonFunctionalRequirements_QoS .

:Variable        a owl:Class .

:Visibility      a owl:Class .

:Vocabulary  a owl:Class .  # Clase para verificar Dominios de Aplicacion
                                           # Usando el archivo vocabularydomain.n3

 # Quitar del archivo vocabularydomain.n3 los prefijos y el nombre de la clase
 #   y ponerlos aqui!
 #  @prefix      :   <http://www.ejemplo.org/#> .
 #  @prefix owl:  <http://www.w3.org/2002/07/owl#>.
 #  :Vocabulary  a owl:Class .

#----------------------------------------------------------------------------------------------
#-- Data type Properties Declaration ----------------------------------------------------------
#----------------------------------------------------------------------------------------------

 #-- Component properties ----------------------

  :hasComponentID    a owl:DatatypeProperty .
     :hasComponentID  rdfs:domain   :ComponentType .
     :hasComponentID  rdfs:range xsd:string .  
  :hasNameDomain     a owl:DatatypeProperty .
     :hasNameDomain   rdfs:domain   :ComponentType .
     :hasNameDomain   rdfs:range xsd:string .  
  :hasNameSubDomain    a owl:DatatypeProperty .
     :hasNameSubDomain rdfs:domain   :ComponentType .
     :hasNameSubDomain rdfs:range xsd:string .  
  :hasComponentName    a owl:DatatypeProperty .
     :hasComponentName  rdfs:domain   :ComponentType .
     :hasComponentName  rdfs:range xsd:string .  
  :hasAuthorName       a owl:DatatypeProperty .
     :hasAuthorName rdfs:domain   :ComponentType .
     :hasAuthorName rdfs:range xsd:string .  
  :hasCompanyName      a owl:DatatypeProperty .
     :hasCompanyName rdfs:domain   :ComponentType .
     :hasCompanyName rdfs:range xsd:string .  
  :hasShortDescription a owl:DatatypeProperty .  
  :hasAddress          a owl:DatatypeProperty .
  :hasPhone            a owl:DatatypeProperty .
  :hasFax              a owl:DatatypeProperty .
  :hasEmail            a owl:DatatypeProperty .
  :hasWebPage          a owl:DatatypeProperty .
  :hasVersionDate      a owl:DatatypeProperty .
  :hasVersionNumber    a owl:DatatypeProperty .
  :hasRevisionNumber   a owl:DatatypeProperty . 
  :hasRevisionDate     a owl:DatatypeProperty . 
  :hasPrice            a owl:DatatypeProperty .
  :hasNumberOfUsed     a owl:DatatypeProperty .

 #-- Quality of Service (QoS) properties ----------

  :needROM                 a owl:DatatypeProperty .      
  :needRAM                 a owl:DatatypeProperty .
  :hasResponseTime    a owl:DatatypeProperty .
  :hardwarePlataform   a owl:DatatypeProperty .
  :hasSizeInBytes         a owl:DatatypeProperty .

 #-- Methods and Parameters -----------------------

  :hasMethodName a owl:DatatypeProperty .
  :hasMethodName  rdfs:domain   :Method .
  :hasMethodName  rdfs:range xsd:string . 

  :hasNumParameters a owl:DatatypeProperty .
  :hasNumParameters  rdfs:domain   :Method .
  :hasNumParameters  rdfs:range xsd:integer .   

  :hasIndexOrder a owl:DatatypeProperty .
  :hasIndexOrder  rdfs:domain   :Parameter .
  :hasIndexOrder  rdfs:range xsd:integer .

  :hasOSversion a owl:DatatypeProperty .
  :hasOSversion  rdfs:domain   :OperatingSystem ;
                 rdfs:range xsd:integer .

 #-- Contracts, Precondition, Postcondition e Invariant -----------------
 
  :hasPrecond  a owl:ObjectProperty ;
                rdfs:domain   :Method ;
                rdfs:range    :Condition ;
                rdfs:label    "Object Property: :<Method> :hasPostcond :<Condition> ." ;
                rdfs:comment  ":Deposit :hasPostcond :Condition1 .  ".                                   

  :hasPostcond  a owl:ObjectProperty ;
                 rdfs:domain   :Method ;
                 rdfs:range    :Condition ;
                 rdfs:label    "Object Property: :<Method> :hasPostcond :<Condition> ." ;
                 rdfs:comment  ":Deposit :hasPostcond :Condition1 .  ".                                      

  :hasInvariant  a owl:ObjectProperty ;     #-- No se puede definir una misma propiedad como Object and Datatype
                  rdfs:domain   :Method ;                 
                  rdfs:range    :Condition ;     
                  rdfs:label    "Object Property: :<Method> :hasInvariant :<Condition> ." ;
                  rdfs:comment  ":Deposit :hasInvariant :Condition1 .  ".               

  :hasVariable   a owl:ObjectProperty ;        # El Dominio y el Rango pueden ser el mismo, 
                   rdfs:domain   :Condition ;  # se vuelve recursivo
                   rdfs:range    :Parameter ;
                   rdfs:range    :Condition ;
                   rdfs:range    :Variable .        
                                 
 :hasVariable2   a owl:ObjectProperty ;        
                   rdfs:domain   :Condition ;  
                   rdfs:range    :Parameter ;
                   rdfs:range    :Condition ;
                   rdfs:range    :Variable .                      

   :hasNumber   a owl:DatatypeProperty ;
                 rdfs:domain   :Condition ;
                 rdfs:range xsd:integer .
                
   :hasOperator  a owl:ObjectProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range    :Operator .   

   :hasCallMethod  a owl:ObjectProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range      :Method .   

   :hasCallMethod2  a owl:ObjectProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range      :Method .   

   :symbolOperator a owl:DatatypeProperty ;
                  rdfs:domain   :OperatorLogic ;
                  rdfs:range xsd:string .

   :hasConnector a owl:ObjectProperty ;         # Permite unir 2 condiciones por medio de 
                  rdfs:domain   :Condition ;            # 1 conector logico and o or
                  rdfs:range    :OperatorLogic .      # or o and     
        
   :hasConstant   a owl:ObjectProperty ;        # Una Invariante o Precondicion puede ser Texto
                  rdfs:domain     :Condition .         # una constante true, false o empty (cadena vacia)
                  
 #-----------------------------------------------   rdfs:range  xsd:string .   

   :hasVarName a owl:ObjectProperty ;
                rdfs:domain :Condition ; 
                rdfs:range  :Variable .      

 #-- Interface ----------------------------------------------------------

  :hasNumMethods   a owl:DatatypeProperty ;
                    rdfs:domain   :Interface ;
                    rdfs:range xsd:integer .  

  :hasNumParameters a owl:DatatypeProperty ;
                     rdfs:domain   :Interface ;
                     rdfs:range xsd:integer .  

  :hasReturnValue a owl:DatatypeProperty ;
                   rdfs:domain   :Interface ;
                   rdfs:range xsd:boolean .  

  :optionalParameter a owl:DatatypeProperty ;  
                      rdfs:domain   :Method ;
                      rdfs:range xsd:boolean .

 #-- hasNamePattern & hasTypeNamePattern --------------------------------

  :hasNamePattern a owl:DatatypeProperty ; 
                   rdfs:domain   :ComponentType .

  :hasNameDomain  a owl:DatatypeProperty ;
                   rdfs:domain   :ComponentType ;
                  rdfs:range  xsd:string .

  :hasNameSubDomain a owl:DatatypeProperty ;
                     rdfs:domain   :ComponentType ;
                     rdfs:range xsd:string .

  :hasNameSubSubDomain a owl:DatatypeProperty ;
                     rdfs:domain   :ComponentType ;
                     rdfs:range xsd:string .
#----------------------------------------------------------------------------------------------
#-- Object Property Declaration ---------------------------------------------------------------
#----------------------------------------------------------------------------------------------

  #-- useInterface ---------------------------------

  :useInterface  rdf:type owl:ObjectProperty ;
                rdfs:domain :Contract ;
                rdfs:range  :Interface .

  #-- isInterfaceOf ---------------------------------

  :isInterfaceOf rdf:type owl:ObjectProperty ;
                rdfs:domain :Interface ;
                rdfs:range  :Component .

  #-- linkParameter ---------------------------------

  :linkParameter rdfs:domain :Parameter ;
                 rdfs:range  :Parameter ;
                  rdf:type owl:ObjectProperty .

  :hasContract rdf:type owl:ObjectProperty ;
              rdfs:domain :Component ;
              rdfs:range  :Contract ;
               rdf:type owl:FunctionalProperty .

  :isInstanceOf rdf:type owl:ObjectProperty .
  :isInstanceOf rdfs:domain :Instance .
  :isInstanceOf rdfs:range  :Component .

  #-- Parameters -----------------------------------

  :hasDirection rdf:type  owl:ObjectProperty ;
               rdfs:domain   :Parameter ;
               rdfs:range    :ParameterDirection .

  :isInputOf rdf:type  owl:ObjectProperty ;
            rdfs:domain   :Parameter ;
            rdfs:range   :Parameter .

  :isOutputOf rdf:type owl:ObjectProperty ;
             rdfs:domain  :Parameter ;
             rdfs:range   :Parameter .

  #-- typeReturn -----------------------------------

  :typeReturn  rdf:type owl:ObjectProperty ;
              rdfs:domain  :Method ;
              rdfs:range   :DataType .

  :hasDataTypeParameter rdf:type owl:ObjectProperty ;
                rdfs:domain  :Parameter ;
                rdfs:range   :DataType .

  :typeInterface rdf:type owl:ObjectProperty ;
                rdfs:domain  :Interface ;
                rdfs:range   :DataType .

  #-- hasMethod ----------------------------------

  :hasMethod a owl:ObjectProperty ;
              rdfs:domain :Interface ;
              rdfs:range  :Method .      

  :hasReturn a owl:ObjectProperty ;
              rdfs:domain :Method ;
              rdfs:range  :DataType .             

  :hasVisibility  rdf:type owl:ObjectProperty .
  :hasVisibility rdfs:domain  :Method .
  :hasVisibility rdfs:domain  :Interface .
  :hasVisibility rdfs:range   :Visibility .

  :hasMatch  rdf:type owl:ObjectProperty .    #-- It is a Object Property. FunctionalProperty only 1 value accept
  :hasMatch rdfs:domain :Interface .          #-- Its domain is an Interface
  :hasMatch rdfs:range  :Interface .          #-- Its range is an Interface
  :hasMatch rdf:type owl:TransitiveProperty . #-- A match B and B match C => A match C
  :hasMatch rdf:type owl:SymmetricProperty .  #-- A match B => B match A
  
  :hasInstance a owl:ObjectProperty .
  :hasInstance  rdfs:domain :Component .
  :hasInstance  rdfs:range  :Instance .

  :hasInterface a owl:ObjectProperty .
  :hasInterface  rdfs:domain :Component .
  :hasInterface  rdfs:range  :Interface .

  :hasParameter a owl:ObjectProperty .
  :hasParameter  rdfs:domain :Method .
  :hasParameter  rdfs:range  :Parameter .

 
 

############################## Codigo del Archivo Ontologia: AtmKiosco.n3 #######################

:atmkiosco a :ComponentType .
:atmkiosco :hasDomain :school .
:atmkiosco :hasSubDomain :atm .
:iatmkiosco  a :Interface .
:iatmkiosco  :typeInterface :provided .
:atmkiosco  :hasInterface :iatmkiosco .
:iatmkiosco  :hasMethod :inicializa .
:inicializa  :hasMethodName "inicializa" .
:inicializa  a :Method .
:inicializa  :typeReturn :void.
:inicializa  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :online .
:online  :hasMethodName "online" .
:online  a :Method .
:online  :typeReturn :void.
:online  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :close .
:close  :hasMethodName "close" .
:close  a :Method .
:close  :typeReturn :void.
:close  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :collect .
:collect  :hasMethodName "collect" .
:collect  a :Method .
:collect  :typeReturn :void.
:collect  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :equipodinero .
:equipodinero  :hasMethodName "equipodinero" .
:equipodinero  a :Method .
:equipodinero  :typeReturn :void.
:equipodinero  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :getchange .
:getchange  :hasMethodName "getchange" .
:getchange  a :Method .
:getchange  :typeReturn :void.
:getchange  :hasParameter  :amount .
:amount  :hasDirection  :in .
:double a :Double .
:amount  :hasDataTypeParameter  :double .
:amount  :hasIndexOrder  1 .
:getchange  :hasNumParameters  1 .
:iatmkiosco  :hasMethod :offline .
:offline  :hasMethodName "offline" .
:offline  a :Method .
:offline  :typeReturn :void.
:offline  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :onmoneyrecibe .
:onmoneyrecibe  :hasMethodName "onmoneyrecibe" .
:onmoneyrecibe  a :Method .
:onmoneyrecibe  :typeReturn :void.
:onmoneyrecibe  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :open .
:open  :hasMethodName "open" .
:open  a :Method .
:open  :typeReturn :void.
:open  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :reset .
:reset  :hasMethodName "reset" .
:reset  a :Method .
:reset  :typeReturn :void.
:reset  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :offlinemei .
:offlinemei  :hasMethodName "offlinemei" .
:offlinemei  a :Method .
:offlinemei  :typeReturn :void.
:offlinemei  :hasNumParameters  0 .
:iatmkiosco  :hasMethod :validatoneleros .
:validatoneleros  :hasMethodName "validatoneleros" .
:validatoneleros  a :Method .
:validatoneleros  :typeReturn :void.
:validatoneleros  :hasNumParameters  0 .
:iatmkiosco  :hasNumMethods 12 .

############################## Codigo del Archivo Ontologia: CajeroAtm.n3 #######################

:cajeroatm a :ComponentType .
:cajeroatm :hasDomain :school .
:cajeroatm :hasSubDomain :atm .
:icajeroatm  a :Interface .
:icajeroatm  :typeInterface :required .
:cajeroatm  :hasInterface :icajeroatm .
:icajeroatm  :hasMethod :selpuerto .
:selpuerto  :hasMethodName "selpuerto" .
:selpuerto  a :Method .
:selpuerto  :typeReturn :void.
:selpuerto  :hasParameter  :puerto .
:puerto  :hasDirection  :in .
:short a :Short .
:puerto  :hasDataTypeParameter  :short .
:puerto  :hasIndexOrder  1 .
:selpuerto  :hasNumParameters  1 .
:icajeroatm  :hasMethod :openconn .
:openconn  :hasMethodName "openconn" .
:openconn  a :Method .
:openconn  :typeReturn :boolean.
:openconn  :hasNumParameters  0 .
:icajeroatm  :hasMethod :closeconn .
:closeconn  :hasMethodName "closeconn" .
:closeconn  a :Method .
:closeconn  :typeReturn :void.
:closeconn  :hasNumParameters  0 .
:icajeroatm  :hasMethod :reset .
:reset  :hasMethodName "reset" .
:reset  a :Method .
:reset  :typeReturn :boolean.
:reset  :hasNumParameters  0 .
:icajeroatm  :hasMethod :offline .
:offline  :hasMethodName "offline" .
:offline  a :Method .
:offline  :typeReturn :boolean.
:offline  :hasParameter  :billete .
:billete  :hasDirection  :in .
:boolean a :Boolean .
:billete  :hasDataTypeParameter  :boolean .
:billete  :hasIndexOrder  1 .
:offline  :hasParameter  :moneda .
:moneda  :hasDirection  :in .
:boolean a :Boolean .
:moneda  :hasDataTypeParameter  :boolean .
:moneda  :hasIndexOrder  2 .
:offline  :hasNumParameters  2 .
:icajeroatm  :hasMethod :s600error .
:s600error  :hasMethodName "s600error" .
:s600error  a :Method .
:s600error  :typeReturn :char.
:s600error  :hasParameter  :error .
:error  :hasDirection  :in .
:char a :Char .
:error  :hasDataTypeParameter  :char .
:error  :hasIndexOrder  1 .
:s600error  :hasNumParameters  1 .
:icajeroatm  :hasNumMethods 6 .

############################## Codigo del Archivo Ontologia: vocabularyAtmKiosco.n3 #######################

:ATM                    a :Vocabulary .
:Atm                     a :Vocabulary .
:cashier                a :Vocabulary .
:client                   a :Vocabulary .
:card                     a :Vocabulary .
:money                 a :Vocabulary .
:online                  a :Vocabulary .
:offline                  a :Vocabulary .
:moneda               a :Vocabulary .
:dinero                   a :Vocabulary .
:cajero                   a :Vocabulary .
:cajeroautomatico a :Vocabulary .
:billete                    a :Vocabulary .
:Toneleros              a :Vocabulary .
:Online                  a :Vocabulary .