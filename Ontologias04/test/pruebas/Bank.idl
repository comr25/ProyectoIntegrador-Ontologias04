module Bank{
    domain            Bank;
    subdomain       Atm;

     provided interface IBank{      
           inv: balance() >= creditLimit() .   

           void consortium();

            void withdrawal(in long cardnumber, in char password, in double amount)
            {
               pre: selfamount > amount .
               pre: password <> empty .
               pre: validCard(cardno) == true .
               post: selfamount = selfamout - amount .
               inv: length(password) > 7 .
            };
           void withdrawalBank(in long cardno, in char password, in double amount)
           {
               pre: selfamount > amount .
               pre: password <> empty .
               pre: validCard(cardno) == true .
               post: selfamount = selfamout - amount .
           };
           void withdrawalUser(in long cardno, in char password, in double amount)
           {
               pre: selfamount > amount .
               pre: password <> empty .
               pre: validCard(cardno) == true .
               post: selfamount = selfamout - amount .
               inv:  length(password) > 7 .
           };
          void deposit(in double amount, in long numclient)
          {    pre: amount > 0.
               pre: validClient(numclient) == true.              
           };
           void depositBank(in double amount, in long numclient)
           {
               pre: amount > 0.
               pre: validClient(numclient) == true.
               post: selfamount = selfamount + amount.
           };
           void depositUser(in double amount, in long numclient)
           {
               pre: amount > 0.
               pre: validClient(numclient) == true.
               post: selfamount = selfamount + amount.
          };
           void depositClient(in double amount, in long numclient)
           {
               pre: amount > 0.
               pre: validClient(numclient) == true.
               post: selfamount = selfamount + amount.
           };
           void depositCompany(in double amount, in long numclient)
            {
               pre: amount > 0.
               pre: validClient(numclient) == true.
               post: selfamount = selfamount + amount.
          };

           boolean setOverdraftLimit(in double amount, in long numclient);

           boolean setOverdraftLimitBank(in long numclient);
      };
};