@prefix       : <http://www.ejemplo.org/#> .
@prefix  owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix  xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix  rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

: a owl:Ontology ;
   rdfs:comment "A ATM Ontology for matching among components in ATM model" .

#-----------------------------------------------------------------------------------------------
#-- Declaration of Classes ---------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------

:Context       a owl:Class .

:Condition     a owl:Class ;
                rdfs:label   "Class: Condition used by Pre, Post and Invariant" ;
                rdfs:comment "Condition".                 

:ComponentType a owl:Class ;
                rdfs:label   "Class: Instances of Component Type" ;
                rdfs:comment "Instances of Components";
                rdfs:subClassOf   
                     [ a owl:Restriction ;
                         owl:onProperty :hasInterface ;  # Restriccion sobre el numero de interfases
                         owl:minCardinality 1 ] .             # Un componente tiene minimo 1 interfaz


# Modificar los tipos de la ontologia a los Tipos de CORBA-IDL+
:DataType        a owl:Class .
   :BasicType rdfs:subClassOf :DataType .         
       :Null        rdfs:subClassOf :BasicType .
       :Void        rdfs:subClassOf :BasicType .
       :Boolean     rdfs:subClassOf :BasicType .
            :False     rdfs:subClassOf :Boolean .
            :True     rdfs:subClassOf :Boolean .
       :Char          rdfs:subClassOf :BasicType .
       :Double      rdfs:subClassOf :BasicType .       
          :Float       rdfs:subClassOf :Double .
       :Long        rdfs:subClassOf :BasicType .
          :Integer     rdfs:subClassOf :Long .
          :Short       rdfs:subClassOf :Integer .
          :Byte        rdfs:subClassOf :Short .
   :StructuredType rdfs:subClassOf :DataType .
       :List        rdfs:subClassOf :StructuredType .
       :Array       rdfs:subClassOf :StructuredType .
   :AnotherType rdfs:subClassOf :DataType .

:Domain    a owl:Class .
     :Multimedia    rdfs:subClassOf :Domain .

:Instance  a owl:Class .

:Interface a owl:Class .

:Interface rdfs:subClassOf 
       [ a owl:Restriction ;
           owl:onProperty :hasNumMethods ;
           owl:minCardinality 1 ] .             # Restriccion sobre el numero de interfases   
     :Provided    rdfs:subClassOf :Interface .
     :Required    rdfs:subClassOf :Interface .
     :Provided    owl:disjointWith :Required .
     :Required    owl:disjointWith :Provided .

:Method          a owl:Class .

:Operator        a owl:Class .

:OperatorLogic   a owl:Class .

:Parameter       a owl:Class .

:ParameterDirection    a owl:Class .
     :Input       rdfs:subClassOf :ParameterDirection .
     :OutPut      rdfs:subClassOf :ParameterDirection .
     :InputOutput rdfs:subClassOf :ParameterDirection .      
     
:Pattern         a owl:Class .
     :ArchitecturalPattern  rdfs:subClassOf :Pattern .
     :DesignPattern         rdfs:subClassOf :Pattern .

:Return          a owl:Class .

:Requirements    a owl:Class .
     :FunctionalRequirements        rdfs:subClassOf :Requirements .
     :NonFunctionalRequirements_QoS rdfs:subClassOf :Requirements .
     :AnswerTime        rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :ExecutionTime    rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :MemoryResource rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :Performance        rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :QoSAttribute       rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :QoSMetric           rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :Security              rdfs:subClassOf :NonFunctionalRequirements_QoS .

:Variable        a owl:Class .

:Visibility      a owl:Class .

:Vocabulary  a owl:Class .  # Clase para verificar Dominios de Aplicacion
                                           # Usando el archivo vocabularydomain.n3

 # Quitar del archivo vocabularydomain.n3 los prefijos y el nombre de la clase
 #   y ponerlos aqui!
 #  @prefix      :   <http://www.ejemplo.org/#> .
 #  @prefix owl:  <http://www.w3.org/2002/07/owl#>.
 #  :Vocabulary  a owl:Class .

#----------------------------------------------------------------------------------------------
#-- Data type Properties Declaration ----------------------------------------------------------
#----------------------------------------------------------------------------------------------

 #-- Component properties ----------------------

  :hasComponentID    a owl:DatatypeProperty .
     :hasComponentID  rdfs:domain   :ComponentType .
     :hasComponentID  rdfs:range xsd:string .  
  :hasNameDomain     a owl:DatatypeProperty .
     :hasNameDomain   rdfs:domain   :ComponentType .
     :hasNameDomain   rdfs:range xsd:string .  
  :hasNameSubDomain    a owl:DatatypeProperty .
     :hasNameSubDomain rdfs:domain   :ComponentType .
     :hasNameSubDomain rdfs:range xsd:string .  
  :hasComponentName    a owl:DatatypeProperty .
     :hasComponentName  rdfs:domain   :ComponentType .
     :hasComponentName  rdfs:range xsd:string .  
  :hasAuthorName       a owl:DatatypeProperty .
     :hasAuthorName rdfs:domain   :ComponentType .
     :hasAuthorName rdfs:range xsd:string .  
  :hasCompanyName      a owl:DatatypeProperty .
     :hasCompanyName rdfs:domain   :ComponentType .
     :hasCompanyName rdfs:range xsd:string .  
  :hasShortDescription a owl:DatatypeProperty .  
  :hasAddress          a owl:DatatypeProperty .
  :hasPhone            a owl:DatatypeProperty .
  :hasFax              a owl:DatatypeProperty .
  :hasEmail            a owl:DatatypeProperty .
  :hasWebPage          a owl:DatatypeProperty .
  :hasVersionDate      a owl:DatatypeProperty .
  :hasVersionNumber    a owl:DatatypeProperty .
  :hasRevisionNumber   a owl:DatatypeProperty . 
  :hasRevisionDate     a owl:DatatypeProperty . 
  :hasPrice            a owl:DatatypeProperty .
  :hasNumberOfUsed     a owl:DatatypeProperty .

 #-- Quality of Service (QoS) properties ----------

  :needROM                 a owl:DatatypeProperty .      
  :needRAM                 a owl:DatatypeProperty .
  :hasResponseTime    a owl:DatatypeProperty .
  :hardwarePlataform   a owl:DatatypeProperty .
  :hasSizeInBytes         a owl:DatatypeProperty .

 #-- Methods and Parameters -----------------------

  :hasMethodName a owl:DatatypeProperty .
  :hasMethodName  rdfs:domain   :Method .
  :hasMethodName  rdfs:range xsd:string . 

  :hasNumParameters a owl:DatatypeProperty .
  :hasNumParameters  rdfs:domain   :Method .
  :hasNumParameters  rdfs:range xsd:integer .   

  :hasIndexOrder a owl:DatatypeProperty .
  :hasIndexOrder  rdfs:domain   :Parameter .
  :hasIndexOrder  rdfs:range xsd:integer .

  :hasOSversion a owl:DatatypeProperty .
  :hasOSversion  rdfs:domain   :OperatingSystem ;
                 rdfs:range xsd:integer .

 #-- Contracts, Precondition, Postcondition e Invariant -----------------
 
  :hasPrecond  a owl:ObjectProperty ;
                rdfs:domain   :Method ;
                rdfs:range    :Condition ;
                rdfs:label    "Object Property: :<Method> :hasPostcond :<Condition> ." ;
                rdfs:comment  ":Deposit :hasPostcond :Condition1 .  ".                                   

  :hasPostcond  a owl:ObjectProperty ;
                 rdfs:domain   :Method ;
                 rdfs:range    :Condition ;
                 rdfs:label    "Object Property: :<Method> :hasPostcond :<Condition> ." ;
                 rdfs:comment  ":Deposit :hasPostcond :Condition1 .  ".                                      

  :hasInvariant  a owl:ObjectProperty ;     #-- No se puede definir una misma propiedad como Object and Datatype
                  rdfs:domain   :Method ;                 
                  rdfs:range    :Condition ;     
                  rdfs:label    "Object Property: :<Method> :hasInvariant :<Condition> ." ;
                  rdfs:comment  ":Deposit :hasInvariant :Condition1 .  ".               

  :hasVariable   a owl:ObjectProperty ;        # El Dominio y el Rango pueden ser el mismo, 
                   rdfs:domain   :Condition ;  # se vuelve recursivo
                   rdfs:range    :Parameter ;
                   rdfs:range    :Condition ;
                   rdfs:range    :Variable .        
                                 
 :hasVariable2   a owl:ObjectProperty ;        
                   rdfs:domain   :Condition ;  
                   rdfs:range    :Parameter ;
                   rdfs:range    :Condition ;
                   rdfs:range    :Variable .                      

   :hasNumber   a owl:DatatypeProperty ;
                 rdfs:domain   :Condition ;
                 rdfs:range xsd:integer .
                
   :hasOperator  a owl:ObjectProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range    :Operator .   

   :hasCallMethod  a owl:ObjectProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range      :Method .   

   :hasCallMethod2  a owl:ObjectProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range      :Method .   

   :symbolOperator a owl:DatatypeProperty ;
                  rdfs:domain   :OperatorLogic ;
                  rdfs:range xsd:string .

   :hasConnector a owl:ObjectProperty ;         # Permite unir 2 condiciones por medio de 
                  rdfs:domain   :Condition ;            # 1 conector logico and o or
                  rdfs:range    :OperatorLogic .      # or o and     
        
   :hasConstant   a owl:ObjectProperty ;        # Una Invariante o Precondicion puede ser Texto
                  rdfs:domain     :Condition .         # una constante true, false o empty (cadena vacia)
                  
 #-----------------------------------------------   rdfs:range  xsd:string .   

   :hasVarName a owl:ObjectProperty ;
                rdfs:domain :Condition ; 
                rdfs:range  :Variable .      

 #-- Interface ----------------------------------------------------------

  :hasNumMethods   a owl:DatatypeProperty ;
                    rdfs:domain   :Interface ;
                    rdfs:range xsd:integer .  

  :hasNumParameters a owl:DatatypeProperty ;
                     rdfs:domain   :Interface ;
                     rdfs:range xsd:integer .  

  :hasReturnValue a owl:DatatypeProperty ;
                   rdfs:domain   :Interface ;
                   rdfs:range xsd:boolean .  

  :optionalParameter a owl:DatatypeProperty ;  
                      rdfs:domain   :Method ;
                      rdfs:range xsd:boolean .

 #-- hasNamePattern & hasTypeNamePattern --------------------------------

  :hasNamePattern a owl:DatatypeProperty ; 
                   rdfs:domain   :ComponentType .

  :hasNameDomain  a owl:DatatypeProperty ;
                   rdfs:domain   :ComponentType ;
                  rdfs:range  xsd:string .

  :hasNameSubDomain a owl:DatatypeProperty ;
                     rdfs:domain   :ComponentType ;
                     rdfs:range xsd:string .

  :hasNameSubSubDomain a owl:DatatypeProperty ;
                     rdfs:domain   :ComponentType ;
                     rdfs:range xsd:string .
#----------------------------------------------------------------------------------------------
#-- Object Property Declaration ---------------------------------------------------------------
#----------------------------------------------------------------------------------------------

  #-- useInterface ---------------------------------

  :useInterface  rdf:type owl:ObjectProperty ;
                rdfs:domain :Contract ;
                rdfs:range  :Interface .

  #-- isInterfaceOf ---------------------------------

  :isInterfaceOf rdf:type owl:ObjectProperty ;
                rdfs:domain :Interface ;
                rdfs:range  :Component .

  #-- linkParameter ---------------------------------

  :linkParameter rdfs:domain :Parameter ;
                 rdfs:range  :Parameter ;
                  rdf:type owl:ObjectProperty .

  :hasContract rdf:type owl:ObjectProperty ;
              rdfs:domain :Component ;
              rdfs:range  :Contract ;
               rdf:type owl:FunctionalProperty .

  :isInstanceOf rdf:type owl:ObjectProperty .
  :isInstanceOf rdfs:domain :Instance .
  :isInstanceOf rdfs:range  :Component .

  #-- Parameters -----------------------------------

  :hasDirection rdf:type  owl:ObjectProperty ;
               rdfs:domain   :Parameter ;
               rdfs:range    :ParameterDirection .

  :isInputOf rdf:type  owl:ObjectProperty ;
            rdfs:domain   :Parameter ;
            rdfs:range   :Parameter .

  :isOutputOf rdf:type owl:ObjectProperty ;
             rdfs:domain  :Parameter ;
             rdfs:range   :Parameter .

  #-- typeReturn -----------------------------------

  :typeReturn  rdf:type owl:ObjectProperty ;
              rdfs:domain  :Method ;
              rdfs:range   :DataType .

  :hasDataTypeParameter rdf:type owl:ObjectProperty ;
                rdfs:domain  :Parameter ;
                rdfs:range   :DataType .

  :typeInterface rdf:type owl:ObjectProperty ;
                rdfs:domain  :Interface ;
                rdfs:range   :DataType .

  #-- hasMethod ----------------------------------

  :hasMethod a owl:ObjectProperty ;
              rdfs:domain :Interface ;
              rdfs:range  :Method .      

  :hasReturn a owl:ObjectProperty ;
              rdfs:domain :Method ;
              rdfs:range  :DataType .             

  :hasVisibility  rdf:type owl:ObjectProperty .
  :hasVisibility rdfs:domain  :Method .
  :hasVisibility rdfs:domain  :Interface .
  :hasVisibility rdfs:range   :Visibility .

  :hasMatch  rdf:type owl:ObjectProperty .    #-- It is a Object Property. FunctionalProperty only 1 value accept
  :hasMatch rdfs:domain :Interface .          #-- Its domain is an Interface
  :hasMatch rdfs:range  :Interface .          #-- Its range is an Interface
  :hasMatch rdf:type owl:TransitiveProperty . #-- A match B and B match C => A match C
  :hasMatch rdf:type owl:SymmetricProperty .  #-- A match B => B match A
  
  :hasInstance a owl:ObjectProperty .
  :hasInstance  rdfs:domain :Component .
  :hasInstance  rdfs:range  :Instance .

  :hasInterface a owl:ObjectProperty .
  :hasInterface  rdfs:domain :Component .
  :hasInterface  rdfs:range  :Interface .

  :hasParameter a owl:ObjectProperty .
  :hasParameter  rdfs:domain :Method .
  :hasParameter  rdfs:range  :Parameter .

 
 

############################## Codigo del Archivo Ontologia: Genera_20.n3 #######################

:componentprovider a :ComponentType .
:componentprovider :hasDomain :x .
:componentprovider :hasSubDomain :y .
:ibank  a :Interface .
:ibank  :typeInterface :provided .
:componentprovider  :hasInterface :ibank .
:ibank  :hasMethod :iniciagraficos .
:iniciagraficos  :hasMethodName "iniciagraficos" .
:iniciagraficos  a :Method .
:iniciagraficos  :typeReturn :void.
:iniciagraficos  :hasNumParameters  0 .
:ibank  :hasMethod :shortextxy .
:shortextxy  :hasMethodName "shortextxy" .
:shortextxy  a :Method .
:shortextxy  :typeReturn :void.
:shortextxy  :hasParameter  :x .
:x  :hasDirection  :in .
:short a :Short .
:x  :hasDataTypeParameter  :short .
:x  :hasIndexOrder  1 .
:shortextxy  :hasParameter  :y .
:y  :hasDirection  :in .
:short a :Short .
:y  :hasDataTypeParameter  :short .
:y  :hasIndexOrder  2 .
:shortextxy  :hasParameter  :num .
:num  :hasDirection  :in .
:char a :Char .
:num  :hasDataTypeParameter  :char .
:num  :hasIndexOrder  3 .
:shortextxy  :hasParameter  :collet .
:collet  :hasDirection  :in .
:short a :Short .
:collet  :hasDataTypeParameter  :short .
:collet  :hasIndexOrder  4 .
:shortextxy  :hasParameter  :colorfon .
:colorfon  :hasDirection  :in .
:short a :Short .
:colorfon  :hasDataTypeParameter  :short .
:colorfon  :hasIndexOrder  5 .
:shortextxy  :hasParameter  :tam .
:tam  :hasDirection  :in .
:short a :Short .
:tam  :hasDataTypeParameter  :short .
:tam  :hasIndexOrder  6 .
:shortextxy  :hasNumParameters  6 .
:condition1  a :Condition .
:shortextxy  :hasPrecond :condition1 .
:condition1   :hasVariable :colorfon .
:condition1  :hasOperator :greater_than_or_equal_to .
:condition1   :hasNumber 35 .
:condition2  a :Condition .
:shortextxy  :hasPostcond :condition2 .
:condition2   :hasVariable :tam .
:condition2  :hasOperator :greater_than_or_equal_to .
:condition2   :hasNumber 943 .
:ibank  :hasMethod :eliminapoli .
:eliminapoli  :hasMethodName "eliminapoli" .
:eliminapoli  a :Method .
:eliminapoli  :typeReturn :short.
:eliminapoli  :hasParameter  :b .
:b  :hasDirection  :out .
:char a :Char .
:b  :hasDataTypeParameter  :char .
:b  :hasIndexOrder  1 .
:eliminapoli  :hasNumParameters  1 .
:condition3  a :Condition .
:eliminapoli  :hasPrecond :condition3 .
:condition3   :hasVariable :b .
:condition3  :hasOperator :less_than .
:condition3   :hasNumber 39 .
:condition4  a :Condition .
:eliminapoli  :hasPostcond :condition4 .
:condition4   :hasVariable :b .
:condition4  :hasOperator :less_than_or_equal_to .
:condition4   :hasNumber 4454 .
:ibank  :hasMethod :insertadatb .
:insertadatb  :hasMethodName "insertadatb" .
:insertadatb  a :Method .
:insertadatb  :typeReturn :short.
:insertadatb  :hasParameter  :a .
:a  :hasDirection  :out .
:char a :Char .
:a  :hasDataTypeParameter  :char .
:a  :hasIndexOrder  1 .
:insertadatb  :hasParameter  :c .
:c  :hasDirection  :out .
:float a :Float .
:c  :hasDataTypeParameter  :float .
:c  :hasIndexOrder  2 .
:insertadatb  :hasParameter  :e .
:e  :hasDirection  :in .
:short a :Short .
:e  :hasDataTypeParameter  :short .
:e  :hasIndexOrder  3 .
:insertadatb  :hasNumParameters  3 .
:condition5  a :Condition .
:insertadatb  :hasPrecond :condition5 .
:condition5   :hasVariable :e .
:condition5  :hasOperator :less_than_or_equal_to .
:condition5   :hasNumber 4 .
:condition6  a :Condition .
:insertadatb  :hasPostcond :condition6 .
:condition6   :hasVariable :c .
:condition6  :hasOperator :equals .
:condition6   :hasNumber 2345 .
:ibank  :hasMethod :creanodopoli .
:creanodopoli  :hasMethodName "creanodopoli" .
:creanodopoli  a :Method .
:creanodopoli  :typeReturn :short.
:creanodopoli  :hasParameter  :b .
:b  :hasDirection  :out .
:char a :Char .
:b  :hasDataTypeParameter  :char .
:b  :hasIndexOrder  1 .
:creanodopoli  :hasParameter  :c .
:c  :hasDirection  :out .
:float a :Float .
:c  :hasDataTypeParameter  :float .
:c  :hasIndexOrder  2 .
:creanodopoli  :hasParameter  :e .
:e  :hasDirection  :in .
:short a :Short .
:e  :hasDataTypeParameter  :short .
:e  :hasIndexOrder  3 .
:creanodopoli  :hasNumParameters  3 .
:condition7  a :Condition .
:creanodopoli  :hasPrecond :condition7 .
:condition7   :hasVariable :e .
:condition7  :hasOperator :greater_than_or_equal_to .
:condition7   :hasNumber 8 .
:condition8  a :Condition .
:creanodopoli  :hasPostcond :condition8 .
:condition8   :hasVariable :e .
:condition8  :hasOperator :not_equal_to .
:condition8   :hasNumber 1035 .
:ibank  :hasMethod :evalua .
:evalua  :hasMethodName "evalua" .
:evalua  a :Method .
:evalua  :typeReturn :float.
:evalua  :hasParameter  :b .
:b  :hasDirection  :out .
:char a :Char .
:b  :hasDataTypeParameter  :char .
:b  :hasIndexOrder  1 .
:evalua  :hasParameter  :xm .
:xm  :hasDirection  :out .
:float a :Float .
:xm  :hasDataTypeParameter  :float .
:xm  :hasIndexOrder  2 .
:evalua  :hasNumParameters  2 .
:condition9  a :Condition .
:evalua  :hasPrecond :condition9 .
:condition9   :hasVariable :xm .
:condition9   :hasOperator :greater_than .
:condition9   :hasNumber 85 .
:condition10  a :Condition .
:evalua  :hasPostcond :condition10 .
:condition10   :hasVariable :xm .
:condition10   :hasOperator :greater_than .
:condition10   :hasNumber 1980 .
:ibank  :hasMethod :captionmat .
:captionmat  :hasMethodName "captionmat" .
:captionmat  a :Method .
:captionmat  :typeReturn :void.
:captionmat  :hasParameter  :matriz .
:matriz  :hasDirection  :out .
:float a :Float .
:matriz  :hasDataTypeParameter  :float .
:matriz  :hasIndexOrder  1 .
:captionmat  :hasParameter  :n .
:n  :hasDirection  :in .
:short a :Short .
:n  :hasDataTypeParameter  :short .
:n  :hasIndexOrder  2 .
:captionmat  :hasParameter  :cual .
:cual  :hasDirection  :in .
:short a :Short .
:cual  :hasDataTypeParameter  :short .
:cual  :hasIndexOrder  3 .
:captionmat  :hasNumParameters  3 .
:condition11  a :Condition .
:captionmat  :hasPrecond :condition11 .
:condition11   :hasVariable :n .
:condition11  :hasOperator :not_equal_to .
:condition11   :hasNumber 4 .
:condition12  a :Condition .
:captionmat  :hasPostcond :condition12 .
:condition12   :hasVariable :matriz .
:condition12  :hasOperator :not_equal_to .
:condition12   :hasNumber 1410 .
:ibank  :hasMethod :changeline .
:changeline  :hasMethodName "changeline" .
:changeline  a :Method .
:changeline  :typeReturn :void.
:changeline  :hasParameter  :matriz .
:matriz  :hasDirection  :out .
:float a :Float .
:matriz  :hasDataTypeParameter  :float .
:matriz  :hasIndexOrder  1 .
:changeline  :hasParameter  :ren .
:ren  :hasDirection  :in .
:short a :Short .
:ren  :hasDataTypeParameter  :short .
:ren  :hasIndexOrder  2 .
:changeline  :hasParameter  :col .
:col  :hasDirection  :in .
:short a :Short .
:col  :hasDataTypeParameter  :short .
:col  :hasIndexOrder  3 .
:changeline  :hasParameter  :n .
:n  :hasDirection  :in .
:short a :Short .
:n  :hasDataTypeParameter  :short .
:n  :hasIndexOrder  4 .
:changeline  :hasNumParameters  4 .
:condition13  a :Condition .
:changeline  :hasPrecond :condition13 .
:condition13   :hasVariable :col .
:condition13  :hasOperator :less_than_or_equal_to .
:condition13   :hasNumber 69 .
:condition14  a :Condition .
:changeline  :hasPostcond :condition14 .
:condition14   :hasVariable :n .
:condition14   :hasOperator :greater_than .
:condition14   :hasNumber 1439 .
:ibank  :hasMethod :llenacero .
:llenacero  :hasMethodName "llenacero" .
:llenacero  a :Method .
:llenacero  :typeReturn :void.
:llenacero  :hasParameter  :matriz .
:matriz  :hasDirection  :out .
:float a :Float .
:matriz  :hasDataTypeParameter  :float .
:matriz  :hasIndexOrder  1 .
:llenacero  :hasParameter  :n .
:n  :hasDirection  :in .
:short a :Short .
:n  :hasDataTypeParameter  :short .
:n  :hasIndexOrder  2 .
:llenacero  :hasNumParameters  2 .
:condition15  a :Condition .
:llenacero  :hasPrecond :condition15 .
:condition15   :hasVariable :n .
:condition15   :hasOperator :greater_than .
:condition15   :hasNumber 26 .
:condition16  a :Condition .
:llenacero  :hasPostcond :condition16 .
:condition16   :hasVariable :n .
:condition16  :hasOperator :less_than_or_equal_to .
:condition16   :hasNumber 3259 .
:ibank  :hasMethod :menu .
:menu  :hasMethodName "menu" .
:menu  a :Method .
:menu  :typeReturn :void.
:menu  :hasNumParameters  0 .
:ibank  :hasMethod :ventmenu .
:ventmenu  :hasMethodName "ventmenu" .
:ventmenu  a :Method .
:ventmenu  :typeReturn :void.
:ventmenu  :hasNumParameters  0 .
:ibank  :hasMethod :ventanacaptura .
:ventanacaptura  :hasMethodName "ventanacaptura" .
:ventanacaptura  a :Method .
:ventanacaptura  :typeReturn :void.
:ventanacaptura  :hasParameter  :x1 .
:x1  :hasDirection  :in .
:short a :Short .
:x1  :hasDataTypeParameter  :short .
:x1  :hasIndexOrder  1 .
:ventanacaptura  :hasParameter  :y1 .
:y1  :hasDirection  :in .
:short a :Short .
:y1  :hasDataTypeParameter  :short .
:y1  :hasIndexOrder  2 .
:ventanacaptura  :hasParameter  :x2 .
:x2  :hasDirection  :in .
:short a :Short .
:x2  :hasDataTypeParameter  :short .
:x2  :hasIndexOrder  3 .
:ventanacaptura  :hasParameter  :y2 .
:y2  :hasDirection  :in .
:short a :Short .
:y2  :hasDataTypeParameter  :short .
:y2  :hasIndexOrder  4 .
:ventanacaptura  :hasNumParameters  4 .
:condition17  a :Condition .
:ventanacaptura  :hasPrecond :condition17 .
:condition17   :hasVariable :x2 .
:condition17  :hasOperator :greater_than_or_equal_to .
:condition17   :hasNumber 45 .
:condition18  a :Condition .
:ventanacaptura  :hasPostcond :condition18 .
:condition18   :hasVariable :y2 .
:condition18  :hasOperator :less_than_or_equal_to .
:condition18   :hasNumber 3313 .
:ibank  :hasMethod :calculafactorial .
:calculafactorial  :hasMethodName "calculafactorial" .
:calculafactorial  a :Method .
:calculafactorial  :typeReturn :long.
:calculafactorial  :hasParameter  :n .
:n  :hasDirection  :in .
:short a :Short .
:n  :hasDataTypeParameter  :short .
:n  :hasIndexOrder  1 .
:calculafactorial  :hasNumParameters  1 .
:condition19  a :Condition .
:calculafactorial  :hasPrecond :condition19 .
:condition19   :hasVariable :n .
:condition19   :hasOperator :greater_than .
:condition19   :hasNumber 46 .
:condition20  a :Condition .
:calculafactorial  :hasPostcond :condition20 .
:condition20   :hasVariable :n .
:condition20   :hasOperator :greater_than .
:condition20   :hasNumber 403 .
:ibank  :hasMethod :factorial .
:factorial  :hasMethodName "factorial" .
:factorial  a :Method .
:factorial  :typeReturn :void.
:factorial  :hasNumParameters  0 .
:ibank  :hasMethod :captdatb .
:captdatb  :hasMethodName "captdatb" .
:captdatb  a :Method .
:captdatb  :typeReturn :void.
:captdatb  :hasParameter  :a .
:a  :hasDirection  :out .
:char a :Char .
:a  :hasDataTypeParameter  :char .
:a  :hasIndexOrder  1 .
:captdatb  :hasParameter  :cual .
:cual  :hasDirection  :in .
:short a :Short .
:cual  :hasDataTypeParameter  :short .
:cual  :hasIndexOrder  2 .
:captdatb  :hasNumParameters  2 .
:condition21  a :Condition .
:captdatb  :hasPrecond :condition21 .
:condition21   :hasVariable :a .
:condition21   :hasOperator :greater_than .
:condition21   :hasNumber 73 .
:condition22  a :Condition .
:captdatb  :hasPostcond :condition22 .
:condition22   :hasVariable :a .
:condition22  :hasOperator :greater_than_or_equal_to .
:condition22   :hasNumber 4033 .
:ibank  :hasMethod :captdatbiseccion .
:captdatbiseccion  :hasMethodName "captdatbiseccion" .
:captdatbiseccion  a :Method .
:captdatbiseccion  :typeReturn :void.
:captdatbiseccion  :hasParameter  :a .
:a  :hasDirection  :out .
:char a :Char .
:a  :hasDataTypeParameter  :char .
:a  :hasIndexOrder  1 .
:captdatbiseccion  :hasNumParameters  1 .
:condition23  a :Condition .
:captdatbiseccion  :hasPrecond :condition23 .
:condition23   :hasVariable :a .
:condition23  :hasOperator :equals .
:condition23   :hasNumber 88 .
:condition24  a :Condition .
:captdatbiseccion  :hasPostcond :condition24 .
:condition24   :hasVariable :a .
:condition24  :hasOperator :less_than_or_equal_to .
:condition24   :hasNumber 3663 .
:ibank  :hasMethod :biseccion .
:biseccion  :hasMethodName "biseccion" .
:biseccion  a :Method .
:biseccion  :typeReturn :float.
:biseccion  :hasParameter  :i .
:i  :hasDirection  :out .
:char a :Char .
:i  :hasDataTypeParameter  :char .
:i  :hasIndexOrder  1 .
:biseccion  :hasParameter  :a .
:a  :hasDirection  :out .
:float a :Float .
:a  :hasDataTypeParameter  :float .
:a  :hasIndexOrder  2 .
:biseccion  :hasParameter  :b .
:b  :hasDirection  :out .
:float a :Float .
:b  :hasDataTypeParameter  :float .
:b  :hasIndexOrder  3 .
:biseccion  :hasParameter  :tol .
:tol  :hasDirection  :out .
:float a :Float .
:tol  :hasDataTypeParameter  :float .
:tol  :hasIndexOrder  4 .
:biseccion  :hasParameter  :ant .
:ant  :hasDirection  :out .
:float a :Float .
:ant  :hasDataTypeParameter  :float .
:ant  :hasIndexOrder  5 .
:biseccion  :hasNumParameters  5 .
:condition25  a :Condition .
:biseccion  :hasPrecond :condition25 .
:condition25   :hasVariable :tol .
:condition25  :hasOperator :greater_than_or_equal_to .
:condition25   :hasNumber 75 .
:condition26  a :Condition .
:biseccion  :hasPostcond :condition26 .
:condition26   :hasVariable :b .
:condition26  :hasOperator :greater_than_or_equal_to .
:condition26   :hasNumber 3473 .
:ibank  :hasMethod :captdatregfalsa .
:captdatregfalsa  :hasMethodName "captdatregfalsa" .
:captdatregfalsa  a :Method .
:captdatregfalsa  :typeReturn :void.
:captdatregfalsa  :hasParameter  :a .
:a  :hasDirection  :out .
:char a :Char .
:a  :hasDataTypeParameter  :char .
:a  :hasIndexOrder  1 .
:captdatregfalsa  :hasNumParameters  1 .
:condition27  a :Condition .
:captdatregfalsa  :hasPrecond :condition27 .
:condition27   :hasVariable :a .
:condition27  :hasOperator :greater_than_or_equal_to .
:condition27   :hasNumber 8 .
:condition28  a :Condition .
:captdatregfalsa  :hasPostcond :condition28 .
:condition28   :hasVariable :a .
:condition28  :hasOperator :not_equal_to .
:condition28   :hasNumber 3207 .
:ibank  :hasMethod :regfalsa .
:regfalsa  :hasMethodName "regfalsa" .
:regfalsa  a :Method .
:regfalsa  :typeReturn :float.
:regfalsa  :hasParameter  :i .
:i  :hasDirection  :out .
:char a :Char .
:i  :hasDataTypeParameter  :char .
:i  :hasIndexOrder  1 .
:regfalsa  :hasParameter  :a .
:a  :hasDirection  :out .
:float a :Float .
:a  :hasDataTypeParameter  :float .
:a  :hasIndexOrder  2 .
:regfalsa  :hasParameter  :b .
:b  :hasDirection  :out .
:float a :Float .
:b  :hasDataTypeParameter  :float .
:b  :hasIndexOrder  3 .
:regfalsa  :hasParameter  :tol .
:tol  :hasDirection  :out .
:float a :Float .
:tol  :hasDataTypeParameter  :float .
:tol  :hasIndexOrder  4 .
:regfalsa  :hasParameter  :ant .
:ant  :hasDirection  :out .
:float a :Float .
:ant  :hasDataTypeParameter  :float .
:ant  :hasIndexOrder  5 .
:regfalsa  :hasNumParameters  5 .
:condition29  a :Condition .
:regfalsa  :hasPrecond :condition29 .
:condition29   :hasVariable :tol .
:condition29  :hasOperator :equals .
:condition29   :hasNumber 67 .
:condition30  a :Condition .
:regfalsa  :hasPostcond :condition30 .
:condition30   :hasVariable :i .
:condition30  :hasOperator :less_than .
:condition30   :hasNumber 2129 .
:ibank  :hasMethod :gaussjordan .
:gaussjordan  :hasMethodName "gaussjordan" .
:gaussjordan  a :Method .
:gaussjordan  :typeReturn :float.
:gaussjordan  :hasParameter  :matriz .
:matriz  :hasDirection  :out .
:double a :Double .
:matriz  :hasDataTypeParameter  :double .
:matriz  :hasIndexOrder  1 .
:gaussjordan  :hasParameter  :n .
:n  :hasDirection  :in .
:short a :Short .
:n  :hasDataTypeParameter  :short .
:n  :hasIndexOrder  2 .
:gaussjordan  :hasNumParameters  2 .
:condition31  a :Condition .
:gaussjordan  :hasPrecond :condition31 .
:condition31   :hasVariable :matriz .
:condition31  :hasOperator :equals .
:condition31   :hasNumber 40 .
:condition32  a :Condition .
:gaussjordan  :hasPostcond :condition32 .
:condition32   :hasVariable :matriz .
:condition32  :hasOperator :less_than .
:condition32   :hasNumber 973 .
:ibank  :hasNumMethods 20 .
